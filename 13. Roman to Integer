Steps:
>> Create a dictionary to map each Roman numeral character to its respective integer value.
>> Loop through the input string:
    - If the current numeral is smaller than the next numeral, subtract its value (as in cases like IV = 4).
    - Otherwise, add its value to the total sum.
>> Return the total sum as the final result.

----------------FUNCTION-CODE-----------------

int romanToInt(string s)
{
  unordered_map<char, int> romanMap = 
  {
    {'I', 1},
    {'V', 5},
    {'X', 10},
    {'L', 50},
    {'C', 100},
    {'D', 500},
    {'M', 1000}
  };

  int result = 0;

  int n = n.size();

  // Loop through the string and apply logic
  for(int i = 0; i < n; ++i)
  {
    // if current value is less than the next one, subtract it
    if(i < n - 1 && romanMap[s[i]] < romanMap[s[i+1]]
    {
      result -= romanMap[s[i]];
    } else
    {
      result += romanMap[s[i]];
    }
  }

  return result;
}


